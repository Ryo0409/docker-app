---
- hosts: "{{ target }}"

  vars:
    ansible_user: ec2-user
    ansible_ssh_private_key_file: ~/.ssh/.pem

  tasks:
    - name: Add the br_netfilter module
      modprobe:
        name: br_netfilter
        state: present
      become: true

    - name: Set the kernel parameter net.bridge.bridge-nf-call-ip6tables
      sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: '1'
        sysctl_set: true
        state: present
        reload: true
        sysctl_file: /etc/sysctl.d/k8s.conf
      become: true

    - name: Set the kernel parameter net.bridge.bridge-nf-call-iptables
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: '1'
        sysctl_set: true
        state: present
        reload: true
        sysctl_file: /etc/sysctl.d/k8s.conf
      become: true

    - name: Check the swap state
      shell:
        cmd : swapon -v
      register: swap_state
      check_mode: false
      changed_when: false
      become: true

    - name: Set the swap off
      shell:
        cmd: swapoff -a
      when: swap_state.stdout != ''
      become: true

    - name: Install dependency packages for docker
      yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present
      become: true

    - name: Install docker
      shell:
        cmd: amazon-linux-extras install -y docker
      become: true

    - name: Enable the docker daemon and start
      systemd:
        name: docker.service
        state: started
        enabled: true
      become: true

    - name: Add the ec2-user to docker group
      user:
        name: ec2-user
        group: docker
      become: true

    - name: Add the repository for kubernetes
      yum_repository:
        name: Kubernetes
        file: kubernetes
        description: repository for kuberenetes
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        gpgcheck: false
        repo_gpgcheck: false
      become: true

    - name: Put SELinux in permissive mode
      shell:
        cmd: setenforce 0
      register: result
      failed_when: 'result.stderr != "setenforce: SELinux is disabled"'
      become: true

    - name: Change selinux setting file
      shell:
        cmd: sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
      become: true

    - name: Install packages for kubernetes
      yum:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
      become: true

    - name: Enable the kubelet
      systemd:
        name: kubelet.service
        enabled: true
      become: true

    - name: Check if kubernetes cluster already running
      shell:
        cmd: kubectl cluster-info
      ignore_errors: yes
      register: k8s_cluster_running_flag
      when: '"controller" in group_names'

    - name: Run kubernetes cluster
      shell:
        cmd: kubeadm init --apiserver-advertise-address $(hostname -i) --pod-network-cidr=10.244.0.0/16
      become: true
      when:
        - '"controller" in group_names'
        - k8s_cluster_running_flag.rc != 0

    - name: Create directory for kubernetes admin file
      file:
        path: "/home/ec2-user/.kube/"
        state: directory
      become: true
      when: '"controller" in group_names'

    - name: Copy kubernetes admin file to ec2-user home directory
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ec2-user/.kube/config
        owner: ec2-user
        group: ec2-user
        remote_src: yes
      become: true
      when: '"controller" in group_names'

    - name: Install flannel cni
      shell:
        cmd: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      when: '"controller" in group_names'

    - name: Check if control plane node is active
      shell: kubectl get node --no-headers | awk '{print $2}'
      register: node_state
      until: node_state.stdout == "Ready"
      retries: 10
      delay: 5
      when: '"controller" in group_names'
